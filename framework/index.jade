<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
html(xmlns="http://www.w3.org/1999/xhtml")
  head
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0")
    title flora
    script(type='text/javascript').
      (function(){
        var orig = {};
        for (var attr in window){
          orig[attr] = window[attr];
        }
        var check = function(){
          for (var attr in window){
            if (attr in orig){
              if (orig[attr] != window[attr]){
                // console.warn("window." + attr + " has changed value");
              }
            } else {
              if (window[attr] === undefined){
                console.warn("New global: " + attr + " (although value is undefined)");
              } else {
                console.warn("New global: " + attr);
              }

            }
            orig[attr] = window[attr];
          }
        };
        window.setInterval(check, 100);
      }());
    script(type='text/javascript').
      (function(){
        var maxErrors = 3;

        window.onerror = function(err, url, line){
          if (maxErrors == 0) {
            console.log("Refusing to log more errors, shit\'s far too broke.");
            return;
          }

          maxErrors--;
          console.log("Error", arguments);
          var req = new XMLHttpRequest();
          req.open("POST", "http://rest.zk.io/flora/errors/");
          req.setRequestHeader("Content-Type", "application/json");
          var report = {
            error: err,
            url: url,
            line: line,
            localTime: (new Date).toUTCString()
          };
          req.send(JSON.stringify(report));

        };
      }());
    script(src="/vendor/require.min.js", data-main="flora")
    link(href="flora.css", rel="stylesheet")
  body
    #loader
      span loading
      span.dot='.'
      span.dot='.'
      span.dot='.'

    //- script
    //-   // document.getElementById('loader').className = 'loader';

